# This is a starter workflow to help you get started with uploading JFrog Artifacts using Actions

# Assumes your GitHub Repository already has JFrog OIDC identity mapping setup correctly
# See https://mytakeda.sharepoint.com/sites/DevOps/SitePages/JFrog-Artifactory-Guide.aspx

name: Deploy to JFrog

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the default branch
  push:
    branches: [ $default-branch ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  JFROG_REPO_NAME: <EXAMPLE DIR>
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-push"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Token permissions required for JFrog OIDC authentication to work
    permissions:
      id-token: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # The following three steps are Example 'Build' steps using node and npm

      # Setup node
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      # Install dependencies
      - name: Install build dependencies
        run: npm install

      # Build Project
      - name: Build Artifact
        run: npm build

      # The following three steps are Example JFrog steps for connecting to JFrog and uploading the build artifact

      # Setup JFrog CLI and authenticate to JFrog using OIDC
      - name: Setup JFrog CLI
        id: jfrog-auth
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JFROG_URL }} # Same for everyone and available to every repository
        with:
          oidc-provider-name: ${{ secrets.JFROG_OIDC_PROVIDER_NAME }} # Same for everyone and available to every repository
          oidc-audience: ${{ secrets.JFROG_OIDC_AUDIENCE }} # Same for everyone and available to every repository

      # Upload artifacts
      - name: Upload JFrog Artifacts
        shell: bash
        run: jf rt u "local/path/to/artifact" "$JFROG_REPO_NAME/$GITHUB_RUN_ID/"

      # Publish Build Info into JFrog Artifactory
      - name: Publish Build info With JFrog CLI
        run: |
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish
