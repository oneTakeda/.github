# This is a starter workflow to help you get started with building Helm Charts using Actions.
# Make sure you already have the access the repo or request its creation through devops-repo-automation repo.
# This approach works for Jfrog "Helm OCI" type repo (Important).
# For more information, see https://mytakeda.sharepoint.com/sites/DevOps/SitePages/Container-deployment.aspx#authenticating-to-jfrog-from-docker-helm-within-github-actions

# Assumes your GitHub Repository already has JFrog OIDC identity mapping setup correctly
# See https://mytakeda.sharepoint.com/sites/DevOps/SitePages/JFrog-Artifactory-Guide.aspx


name: Build and Push Helm OCI Chart
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the default branch
  push:
    branches: [ $default-branch ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-push"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Token permissions required for JFrog OIDC authentication to work
    permissions:
      id-token: write
      contents: read
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # This step installs Helm using the azure/setup-helm GitHub Action.
      - name: Install Helm
        uses: azure/setup-helm@v4.2.0
      
      # Create Helm package and push it to JFrog Helm repository
      # Indicate the helm chart folder and set the 'package_version'
      - name: Build Helm package
        shell: bash
        run: |
          helm package <./your/helm/folder> --version '<package_version>'
      
      # Setup JFrog CLI and authenticate to JFrog using OIDC
      - name: Setup JFrog CLI
        id: jfrog-auth
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JFROG_URL }} # Same for everyone and available to every repository
        with:
          oidc-provider-name: ${{ secrets.JFROG_OIDC_PROVIDER_NAME }} # Same for everyone and available to every repository
          oidc-audience: ${{ secrets.JFROG_OIDC_AUDIENCE }} # Same for everyone and available to every repository

      # Helm Login to JFrog 
      # Be sure to replace the <JFROG_REPO_NAME>
      - name: jFrog Registry Login with helm 
        shell: bash
        env:
          JF_USER: ${{ steps.jfrog-auth.outputs.oidc-user }}          # Username provided by jfrog-auth previous step
          JF_ACCESS_TOKEN: ${{ steps.jfrog-auth.outputs.oidc-token }} # Token provided by jfrog-auth previous step
        run: |
          echo "$JF_ACCESS_TOKEN" | helm registry login takedaawsuseast-<JFROG_REPO_NAME>-helmoci-local.jfrog.io \
                  --username $JF_USER \
                  --password-stdin

      # Upload/push Helm chart to JFrog OCI Repo
      # Be sure to update with your project's actual naming replacing "CHART_NAME" and package_version
      # e.g. helm push my-helm-chart-1.0.0.tgz oci://takedaawsuseast-my-repo-helmoci-local.jfrog.io
      - name: Push Helm chart to JFrog OCI Artifactory
        shell: bash
        run: |
          helm push <CHART_NAME-package_version>.tgz oci://takedaawsuseast-<JFROG_REPO_NAME>-helmoci-local.jfrog.io
