# This is a starter workflow to help you get started with building Docker Containers using Actions

# Required Secrets:
# JFROG_USER
# JFROG_PASSWORD

name: Build and Push

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the default branch
  push:
    branches: [ $default-branch ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-push"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Log in to the Docker Registry
      # Be sure to update with your project's actual registry replacing "EXAMPLE"
      - name: Login to JFrog Artifactory
        uses: docker/login-action@v3
        with:
          registry: takedaawsuseast-EXAMPLE-docker-local.jfrog.io
          username: ${{ secrets.JFROG_USER }}
          password: ${{ secrets.JFROG_PASSWORD }}
      
      # Build and Push the Image
      # Be sure to update with your project's actual naming replacing "EXAMPLE"
      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
         context: .
         push: ${{ github.event_name != 'pull_request' }}
         file: ./path/to/Dockerfile
         tags: takedaawsuseast-EXAMPLE-docker-local.jfrog.io/EXAMPLE-docker-local/EXAMPLE:${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
